allprojects{
    group 'MySpringBootFrame'
    version '1.0-SNAPSHOT'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.flywaydb.flyway'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "${mavenRepoUrl}" }
    }

    dependencies{
        //springboot web支持
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        //springboot test支持
        compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
        //springboot redis支持
        compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
        //springboot websocket支持
        compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
        //springboot rabbitmq支持
        compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
        //springboot kafka支持
        compile("org.springframework.kafka:spring-kafka:${kafkaVersion}")
        //activiti支持
        compile("org.activiti:activiti-spring-boot-starter-basic:${activitiVersion}")
        //swagger集成
        compile "io.springfox:springfox-swagger2:${swaggerVersion}"
        compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
        //shiro权限框架集成
        compile("org.apache.shiro:shiro-spring:${shiroVersion}")
        compile("org.apache.shiro:shiro-ehcache:${shiroVersion}")
        compile("org.apache.shiro:shiro-cas:${shiroVersion}")
        //rocketmq集成
        compile("com.aliyun.openservices:ons-client:1.7.0.Final")
        //阿里云 tablestore集成
        compile("com.aliyun.openservices:tablestore:${tablestoreVersion}") {
            //解决阿里云传递性依赖
            exclude group: 'org.apache.logging.log4j', module: 'slf4j-api'
            exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
            exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        }
        //阿里云mns集成
        compile("com.aliyun.mns:aliyun-sdk-mns:${mnsVersion}")
        //阿里云sms集成
        compile ("com.aliyun:aliyun-java-sdk-dysmsapi:${smsVersion}")
        compile ("com.aliyun:aliyun-java-sdk-core:${aliyunSdkCoreVersion}")
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
            options.compilerArgs << "-parameters"
            options.encoding = "UTF-8"
        }
    }
}

bootRun {
    addResources = true
    /**
     * 启动时候带入jvm的参数;如下(启动jvisualvm监控)
     * nohup gradle bootRun -PjvmArgs="-Djava.rmi.server.hostname=172.16.24.36 -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true" &
     */
    if (project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

buildscript {
    ext {
        springBootVersion = '1.+'
        flywayVersion='3.2.1'
        swaggerVersion='2.+'
        shiroVersion='1.+'
        kafkaVersion='1.+'
        activitiVersion='6.0.+'
        tablestoreVersion='4.+'
        mnsVersion='1.+'
        smsVersion='1.+'
        aliyunSdkCoreVersion='2.+'
        mavenRepoUrl='http://maven.aliyun.com/nexus/content/groups/public/'
    }
    repositories {
        mavenLocal()
        maven { url "${mavenRepoUrl}" }
    }
    dependencies {
        //使用springboot框架
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //使用flyway插件
        classpath "org.flywaydb:flyway-gradle-plugin:${flywayVersion}"
    }

}

dependencies {
    compile project(':Sys')
//    compile project(':MongoDB')
}
