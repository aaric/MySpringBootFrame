吖pplicaserver:
    port: 8888
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/result
        min-response-size: 1024
    session:
        timeout: 1800
spring:
   profiles.active: dev
   freemarker.cache: false
   resources.cache-period: 0
   datasource:
         url: jdbc:mysql://127.0.0.1:3306/msbf?characterEncoding=utf8&useSSL=false
         username: root
         password: root
         hikari:
             minimumIdle: 5
             maximumPoolSize: 15
             data-source-properties:
                 cachePrepStmts: true
                 prepStmtCacheSize: 250
                 prepStmtCacheSqlLimit: 2048
                 useServerPrepStmts: true
#  mongodb配置
#   data.mongodb.uri: mongodb://root:root@localhost:27017/devtestV11
#  jpa配置
   jpa:
      show-sql: false
      hibernate:
          # Hibernate DDL  auto: create, create-drop, update, validate
          ddl-auto: validate
      properties:
          hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
          hibernate.current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext

#  i18n资源文件配置
   messages:
      basename: i18n/base/messages,i18n/main/messages,i18n/sys/messages,i18n/rdb/messages,i18n/mongodb/messages,i18n/nettyserver/messages
      cache-seconds: -1
      encoding: UTF-8

#  redis配置
#  如果都进行了配置,加载的先后顺序为:
#  sentinel>cluster>single
   redis:
      #公用配置
      ssl: false
      database: 0
      timeout: 0
      password:
      #连接池
      pool:
          max-idle: 8
          min-idle: 0
          max-active: 8
          max-wait: -1
      #主从配置
#      sentinel:
#          master: myMaster
#          nodes: 127.0.0.1:23679,127.0.0.1:23680,127.0.0.1:23681
      #集群配置
#      cluster:
#          maxRedirects: 3
#          nodes:
#             - 119.23.34.40:7001
#             - 119.23.34.40:7002
#             - 119.23.34.40:7003
#             - 39.108.14.114:7004
#             - 39.108.14.114:7005
#             - 39.108.14.114:7006
      #单机配置
      host: 127.0.0.1
      port: 6379

#  rabbitmq配置
#   rabbitmq:
#      host: 121.40.157.200
#      port: 5672
#      username: briair
#      password: briair

#  kafka配置
#   kafka:
#      bootstrap-servers: 10.10.11.147:9092,10.10.11.148:9092,10.10.11.149:9092
#      consumer.group-id: zd
#      consumer.key-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
#      consumer.value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
#      producer.key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#      producer.value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#  activiti配置
#  processDefinitionLocationPrefix 默认为 src/main/resources/processes
#   activiti:
#       processDefinitionLocationPrefix: classpath:/com/bcd/com.bcd.config/activiti/example/

#aliyun:
#   mns:
#      test1:
#        enable: true
#        #新建队列的长轮训时间,如果队列是在阿里云控制台创建,则此配置不生效
#        queueWaitSeconds: 30
#        topic: bcd-test
#        queue: bcd-test1
#        subscription: bcd-test1
#      test2:
#        enable: true
#        #新建队列的长轮训时间,如果队列是在阿里云控制台创建,则此配置不生效
#        queueWaitSeconds: 30
#        topic: bcd-test
#        queue: bcd-test2
#        subscription: bcd-test2
#      endPoint:
#   secretKey:
#   accessKey:
#   rocketMq:
#      producerId: PID_Proudcer_4
#      onsAddr: http://onsaddr-internet.aliyun.com/rocketmq/nsaddr4client-internet
#   tableStore:
#      endPoint: http://rooster-dev.cn-hangzhou.ots.aliyuncs.com
#      instanceName: rooster-dev
#   sms:
#      product: Dysmsapi
#      domain: dysmsapi.aliyuncs.com
#      regionId: cn-hangzhou
#      endpointName: cn-hangzhou
